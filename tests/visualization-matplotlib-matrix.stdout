#!/usr/bin/env python
# Generated by roboptim-core
import matplotlib
import matplotlib.pyplot as plt
import numpy as np

fig = plt.figure ()

# Dense matrix
ax1 = plt.subplot(4, 1, 1)
data = np.array ([[2.00000000,0.00000000,0.00000000,0.00000000,2.00000000,2.00000000,0.00000000],
[2.00000000,0.00000000,2.00000000,0.00000000,0.00000000,0.00000000,2.00000000],
[2.00000000,0.00000000,2.00000000,0.00000000,0.00000000,0.00000000,2.00000000],
[2.00000000,2.00000000,2.00000000,0.00000000,0.00000000,2.00000000,0.00000000],
[0.00000000,0.00000000,2.00000000,0.00000000,2.00000000,0.00000000,0.00000000],
[0.00000000,0.00000000,2.00000000,0.00000000,2.00000000,0.00000000,0.00000000],
[0.00000000,0.00000000,2.00000000,0.00000000,2.00000000,2.00000000,2.00000000],
])
cmap = matplotlib.colors.LinearSegmentedColormap.from_list(
         name='red_white_blue',
         colors =[(0, 0, 1),
                  (1, 1., 1),
                  (1, 0, 0)])
crange = abs(data).max()
im = plt.imshow(data, interpolation='nearest', cmap=cmap, vmin=-crange, vmax=crange)
cbar = plt.colorbar(im)
cbar.draw_all()

box = ax1.get_position()
ax1.set_position([box.x0, box.y0, box.width * 0.8, box.height])
ax1.legend(loc='center left', bbox_to_anchor=(1, 0.5))
# Dense matrix (structure)
ax2 = plt.subplot(4, 1, 2)
data = np.array ([[2.00000000,0.00000000,0.00000000,0.00000000,2.00000000,2.00000000,0.00000000],
[2.00000000,0.00000000,2.00000000,0.00000000,0.00000000,0.00000000,2.00000000],
[2.00000000,0.00000000,2.00000000,0.00000000,0.00000000,0.00000000,2.00000000],
[2.00000000,2.00000000,2.00000000,0.00000000,0.00000000,2.00000000,0.00000000],
[0.00000000,0.00000000,2.00000000,0.00000000,2.00000000,0.00000000,0.00000000],
[0.00000000,0.00000000,2.00000000,0.00000000,2.00000000,0.00000000,0.00000000],
[0.00000000,0.00000000,2.00000000,0.00000000,2.00000000,2.00000000,2.00000000],
])
plt.imshow(data > 0, interpolation='nearest', cmap=matplotlib.colors.ListedColormap(['white', 'blue']))

box = ax2.get_position()
ax2.set_position([box.x0, box.y0, box.width * 0.8, box.height])
ax2.legend(loc='center left', bbox_to_anchor=(1, 0.5))
# Sparse matrix
ax3 = plt.subplot(4, 1, 3)
data = np.zeros ((7, 7))
data[0,0] = 2.00000000
data[1,0] = 2.00000000
data[2,0] = 2.00000000
data[3,0] = 2.00000000
data[6,0] = 0.00000000
data[3,1] = 2.00000000
data[1,2] = 2.00000000
data[2,2] = 2.00000000
data[3,2] = 2.00000000
data[4,2] = 2.00000000
data[5,2] = 2.00000000
data[6,2] = 2.00000000
data[0,4] = 2.00000000
data[4,4] = 2.00000000
data[5,4] = 2.00000000
data[6,4] = 2.00000000
data[0,5] = 2.00000000
data[3,5] = 2.00000000
data[6,5] = 2.00000000
data[1,6] = 2.00000000
data[2,6] = 2.00000000
data[6,6] = 2.00000000
cmap = matplotlib.colors.LinearSegmentedColormap.from_list(
         name='red_white_blue',
         colors =[(0, 0, 1),
                  (1, 1., 1),
                  (1, 0, 0)])
crange = abs(data).max()
im = plt.imshow(data, interpolation='nearest', cmap=cmap, vmin=-crange, vmax=crange)
cbar = plt.colorbar(im)
cbar.draw_all()

box = ax3.get_position()
ax3.set_position([box.x0, box.y0, box.width * 0.8, box.height])
ax3.legend(loc='center left', bbox_to_anchor=(1, 0.5))
# Sparse matrix (structure)
ax4 = plt.subplot(4, 1, 4)
data = np.zeros ((7, 7))
data[0,0] = 1.00000000
data[1,0] = 1.00000000
data[2,0] = 1.00000000
data[3,0] = 1.00000000
data[6,0] = 1.00000000
data[3,1] = 1.00000000
data[1,2] = 1.00000000
data[2,2] = 1.00000000
data[3,2] = 1.00000000
data[4,2] = 1.00000000
data[5,2] = 1.00000000
data[6,2] = 1.00000000
data[0,4] = 1.00000000
data[4,4] = 1.00000000
data[5,4] = 1.00000000
data[6,4] = 1.00000000
data[0,5] = 1.00000000
data[3,5] = 1.00000000
data[6,5] = 1.00000000
data[1,6] = 1.00000000
data[2,6] = 1.00000000
data[6,6] = 1.00000000
plt.imshow(data, interpolation='nearest', cmap=matplotlib.colors.ListedColormap(['white', 'blue']))

box = ax4.get_position()
ax4.set_position([box.x0, box.y0, box.width * 0.8, box.height])
ax4.legend(loc='center left', bbox_to_anchor=(1, 0.5))

plt.show ()

